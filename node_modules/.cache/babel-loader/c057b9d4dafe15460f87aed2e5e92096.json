{"ast":null,"code":"import { store, authActions } from \"../app/store\";\nexport const fetchWrapper = {\n  get: request(\"GET\"),\n  post: request(\"POST\"),\n  put: request(\"PUT\"),\n  delete: request(\"DELETE\")\n};\n\nfunction request(method) {\n  return (url, body) => {\n    const requestOptions = {\n      method,\n      headers: authHeader(url)\n    };\n\n    if (body) {\n      requestOptions.headers[\"Content-Type\"] = \"application/json\";\n      requestOptions.body = JSON.stringify(body);\n    }\n\n    return fetch(url, requestOptions).then(handleResponse);\n  };\n} // helper functions\n\n\nfunction authHeader(url) {\n  // return auth header with jwt if user is logged in and request is to the api url\n  const token = authToken();\n  const isLoggedIn = !!token;\n  const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\n\n  if (isLoggedIn && isApiUrl) {\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  } else {\n    return {};\n  }\n}\n\nfunction authToken() {\n  var _store$getState$auth$;\n\n  return (_store$getState$auth$ = store.getState().auth.user) === null || _store$getState$auth$ === void 0 ? void 0 : _store$getState$auth$.token;\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if ([401, 403].includes(response.status) && authToken()) {\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n        const logout = () => store.dispatch(authActions.logout());\n\n        logout();\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"names":["store","authActions","fetchWrapper","get","request","post","put","delete","method","url","body","requestOptions","headers","authHeader","JSON","stringify","fetch","then","handleResponse","token","authToken","isLoggedIn","isApiUrl","startsWith","process","env","REACT_APP_API_URL","Authorization","getState","auth","user","response","text","data","parse","ok","includes","status","logout","dispatch","error","message","statusText","Promise","reject"],"sources":["D:/Documents/manga-reader-app/manga-reader-frontend/src/helper/fetch-wrapper.js"],"sourcesContent":["import { store, authActions } from \"../app/store\";\r\n\r\nexport const fetchWrapper = {\r\n  get: request(\"GET\"),\r\n  post: request(\"POST\"),\r\n  put: request(\"PUT\"),\r\n  delete: request(\"DELETE\"),\r\n};\r\n\r\nfunction request(method) {\r\n  return (url, body) => {\r\n    const requestOptions = {\r\n      method,\r\n      headers: authHeader(url),\r\n    };\r\n    if (body) {\r\n      requestOptions.headers[\"Content-Type\"] = \"application/json\";\r\n      requestOptions.body = JSON.stringify(body);\r\n    }\r\n    return fetch(url, requestOptions).then(handleResponse);\r\n  };\r\n}\r\n\r\n// helper functions\r\n\r\nfunction authHeader(url) {\r\n  // return auth header with jwt if user is logged in and request is to the api url\r\n  const token = authToken();\r\n  const isLoggedIn = !!token;\r\n  const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\r\n  if (isLoggedIn && isApiUrl) {\r\n    return { Authorization: `Bearer ${token}` };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction authToken() {\r\n  return store.getState().auth.user?.token;\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n\r\n    if (!response.ok) {\r\n      if ([401, 403].includes(response.status) && authToken()) {\r\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n        const logout = () => store.dispatch(authActions.logout());\r\n        logout();\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,WAAhB,QAAmC,cAAnC;AAEA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,GAAG,EAAEC,OAAO,CAAC,KAAD,CADc;EAE1BC,IAAI,EAAED,OAAO,CAAC,MAAD,CAFa;EAG1BE,GAAG,EAAEF,OAAO,CAAC,KAAD,CAHc;EAI1BG,MAAM,EAAEH,OAAO,CAAC,QAAD;AAJW,CAArB;;AAOP,SAASA,OAAT,CAAiBI,MAAjB,EAAyB;EACvB,OAAO,CAACC,GAAD,EAAMC,IAAN,KAAe;IACpB,MAAMC,cAAc,GAAG;MACrBH,MADqB;MAErBI,OAAO,EAAEC,UAAU,CAACJ,GAAD;IAFE,CAAvB;;IAIA,IAAIC,IAAJ,EAAU;MACRC,cAAc,CAACC,OAAf,CAAuB,cAAvB,IAAyC,kBAAzC;MACAD,cAAc,CAACD,IAAf,GAAsBI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAtB;IACD;;IACD,OAAOM,KAAK,CAACP,GAAD,EAAME,cAAN,CAAL,CAA2BM,IAA3B,CAAgCC,cAAhC,CAAP;EACD,CAVD;AAWD,C,CAED;;;AAEA,SAASL,UAAT,CAAoBJ,GAApB,EAAyB;EACvB;EACA,MAAMU,KAAK,GAAGC,SAAS,EAAvB;EACA,MAAMC,UAAU,GAAG,CAAC,CAACF,KAArB;EACA,MAAMG,QAAQ,GAAGb,GAAG,CAACc,UAAJ,CAAeC,OAAO,CAACC,GAAR,CAAYC,iBAA3B,CAAjB;;EACA,IAAIL,UAAU,IAAIC,QAAlB,EAA4B;IAC1B,OAAO;MAAEK,aAAa,EAAG,UAASR,KAAM;IAAjC,CAAP;EACD,CAFD,MAEO;IACL,OAAO,EAAP;EACD;AACF;;AAED,SAASC,SAAT,GAAqB;EAAA;;EACnB,gCAAOpB,KAAK,CAAC4B,QAAN,GAAiBC,IAAjB,CAAsBC,IAA7B,0DAAO,sBAA4BX,KAAnC;AACD;;AAED,SAASD,cAAT,CAAwBa,QAAxB,EAAkC;EAChC,OAAOA,QAAQ,CAACC,IAAT,GAAgBf,IAAhB,CAAsBe,IAAD,IAAU;IACpC,MAAMC,IAAI,GAAGD,IAAI,IAAIlB,IAAI,CAACoB,KAAL,CAAWF,IAAX,CAArB;;IAEA,IAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;MAChB,IAAI,CAAC,GAAD,EAAM,GAAN,EAAWC,QAAX,CAAoBL,QAAQ,CAACM,MAA7B,KAAwCjB,SAAS,EAArD,EAAyD;QACvD;QACA,MAAMkB,MAAM,GAAG,MAAMtC,KAAK,CAACuC,QAAN,CAAetC,WAAW,CAACqC,MAAZ,EAAf,CAArB;;QACAA,MAAM;MACP;;MAED,MAAME,KAAK,GAAIP,IAAI,IAAIA,IAAI,CAACQ,OAAd,IAA0BV,QAAQ,CAACW,UAAjD;MACA,OAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;IACD;;IAED,OAAOP,IAAP;EACD,CAfM,CAAP;AAgBD"},"metadata":{},"sourceType":"module"}