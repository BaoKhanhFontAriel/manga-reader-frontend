{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\manga-reader-app\\\\manga-reader-frontend\\\\src\\\\components\\\\manga\\\\ChapterTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MangaService from \"../../services/manga.service\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChapterTable(props) {\n  _s();\n\n  const {\n    mangaid\n  } = useParams();\n  let {\n    path,\n    url\n  } = useRouteMatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: `${url}/chapters`,\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \":chapterid\",\n        element: /*#__PURE__*/_jsxDEV(ChapterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChapterTable, \"4oamAl9Xtwxb++R+qG0j0uwlKKU=\", true);\n\n_c = ChapterTable;\n\nfunction UploadedDateTimeByChapterId(props) {\n  _s2();\n\n  const [datetime, setDatetime] = useState([]);\n  useEffect(() => {\n    MangaService.getUploadedDateTimeByChapterId(props.chapterid).then(res => {\n      setDatetime(res.data);\n    }).catch(function (ex) {\n      console.log(\"Response parsing failed. Error: \", ex);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: datetime\n  }, void 0, false);\n}\n\n_s2(UploadedDateTimeByChapterId, \"zAV5RhiEsJkzZW31JMndTa0QuH0=\");\n\n_c2 = UploadedDateTimeByChapterId;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChapterTable\");\n$RefreshReg$(_c2, \"UploadedDateTimeByChapterId\");","map":{"version":3,"names":["useState","useEffect","MangaService","Link","ChapterTable","props","mangaid","useParams","path","url","useRouteMatch","UploadedDateTimeByChapterId","datetime","setDatetime","getUploadedDateTimeByChapterId","chapterid","then","res","data","catch","ex","console","log"],"sources":["D:/Documents/manga-reader-app/manga-reader-frontend/src/components/manga/ChapterTable.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport MangaService from \"../../services/manga.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function ChapterTable(props) {\r\n  const { mangaid } = useParams();\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <div>\r\n            <Route path={`${url}/chapters`}>\r\n        <Route path=\":chapterid\" element={<ChapterPage />}></Route>\r\n      </Route>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nfunction UploadedDateTimeByChapterId(props) {\r\n  const [datetime, setDatetime] = useState([]);\r\n\r\n  useEffect(() => {\r\n    MangaService.getUploadedDateTimeByChapterId(props.chapterid)\r\n      .then((res) => {\r\n        setDatetime(res.data);\r\n      })\r\n      .catch(function (ex) {\r\n        console.log(\"Response parsing failed. Error: \", ex);\r\n      });\r\n  });\r\n\r\n  return <>{datetime}</>;\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAClC,MAAM;IAAEC;EAAF,IAAcC,SAAS,EAA7B;EACA,IAAI;IAAEC,IAAF;IAAQC;EAAR,IAAgBC,aAAa,EAAjC;EAEA,oBACE;IAAA,uBACQ,QAAC,KAAD;MAAO,IAAI,EAAG,GAAED,GAAI,WAApB;MAAA,uBACJ,QAAC,KAAD;QAAO,IAAI,EAAC,YAAZ;QAAyB,OAAO,eAAE,QAAC,WAAD;UAAA;UAAA;UAAA;QAAA;MAAlC;QAAA;QAAA;QAAA;MAAA;IADI;MAAA;MAAA;MAAA;IAAA;EADR;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAbeL,Y;;KAAAA,Y;;AAehB,SAASO,2BAAT,CAAqCN,KAArC,EAA4C;EAAA;;EAC1C,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACdC,YAAY,CAACY,8BAAb,CAA4CT,KAAK,CAACU,SAAlD,EACGC,IADH,CACSC,GAAD,IAAS;MACbJ,WAAW,CAACI,GAAG,CAACC,IAAL,CAAX;IACD,CAHH,EAIGC,KAJH,CAIS,UAAUC,EAAV,EAAc;MACnBC,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,EAAhD;IACD,CANH;EAOD,CARQ,CAAT;EAUA,oBAAO;IAAA,UAAGR;EAAH,iBAAP;AACD;;IAdQD,2B;;MAAAA,2B"},"metadata":{},"sourceType":"module"}