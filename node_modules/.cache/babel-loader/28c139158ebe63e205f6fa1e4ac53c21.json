{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8070/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"login\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        const token = response.data.accessToken;\n        const user = {\n          username,\n          password,\n          token: JSON.stringify(token)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(fullname, email, username, password) {\n    return axios.post(API_URL + \"signup\", {\n      fullname,\n      email,\n      username,\n      password\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","token","user","JSON","stringify","localStorage","setItem","logout","removeItem","register","fullname","email"],"sources":["d:/Documents/manga-reader-app/manga-reader-frontend/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"http://localhost:8070/api/auth/\";\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"login\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          const token = response.data.accessToken;\r\n          const user = {\r\n            username,\r\n            password,\r\n            token: JSON.stringify(token),\r\n          };\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n  register(fullname, email, username, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      fullname,\r\n      email,\r\n      username,\r\n      password,\r\n    });\r\n  }\r\n}\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,iCAAhB;;AACA,MAAMC,WAAN,CAAkB;EAChBC,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;IACxB,OAAOL,KAAK,CACTM,IADI,CACCL,OAAO,GAAG,OADX,EACoB;MAAEG,QAAF;MAAYC;IAAZ,CADpB,EAEJE,IAFI,CAEEC,QAAD,IAAc;MAClB,IAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;QAC7B,MAAMC,KAAK,GAAGH,QAAQ,CAACC,IAAT,CAAcC,WAA5B;QACA,MAAME,IAAI,GAAG;UACXR,QADW;UAEXC,QAFW;UAGXM,KAAK,EAAEE,IAAI,CAACC,SAAL,CAAeH,KAAf;QAHI,CAAb;QAKAI,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BH,IAAI,CAACC,SAAL,CAAeF,IAAf,CAA7B;MACD;;MACD,OAAOJ,QAAQ,CAACC,IAAhB;IACD,CAbI,CAAP;EAcD;;EACDQ,MAAM,GAAG;IACPF,YAAY,CAACG,UAAb,CAAwB,MAAxB;EACD;;EACDC,QAAQ,CAACC,QAAD,EAAWC,KAAX,EAAkBjB,QAAlB,EAA4BC,QAA5B,EAAsC;IAC5C,OAAOL,KAAK,CAACM,IAAN,CAAWL,OAAO,GAAG,QAArB,EAA+B;MACpCmB,QADoC;MAEpCC,KAFoC;MAGpCjB,QAHoC;MAIpCC;IAJoC,CAA/B,CAAP;EAMD;;AA3Be;;AA6BlB,eAAe,IAAIH,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}