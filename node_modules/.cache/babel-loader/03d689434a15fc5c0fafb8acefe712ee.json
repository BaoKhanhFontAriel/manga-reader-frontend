{"ast":null,"code":"import * as AuthTypes from \"./authTypes\";\nimport axios from \"axios\";\nconst AUTH_URL = \"http://localhost:8070/api/auth\";\n\nconst loginRequest = () => {\n  return {\n    type: AuthTypes.LOGIN_REQUEST\n  };\n};\n\nconst logoutRequest = () => {\n  return {\n    type: AuthTypes.LOGOUT_REQUEST\n  };\n};\n\nconst success = isLoggedIn => {\n  return {\n    type: AuthTypes.SUCCESS,\n    payload: isLoggedIn\n  };\n};\n\nconst failure = () => {\n  return {\n    type: AuthTypes.FAILURE,\n    payload: false\n  };\n};\n\nexport const authenticateUser = (email, password) => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    loginLink = `${AUTH_URL}/login`;\n    const response = await axios.post({\n      loginLink\n    }, {\n      email: email,\n      password: password\n    });\n    localStorage.setItem(\"jwtToken\", response.data.token);\n    dispatch(success({\n      username: response.data.name,\n      isLoggedIn: true\n    }));\n    return Promise.resolve(response.data);\n  } catch (error) {\n    dispatch(failure());\n    return Promise.reject(error);\n  }\n};\nexport const logoutUser = () => {\n  return dispatch => {\n    dispatch(logoutRequest());\n    localStorage.removeItem(\"jwtToken\");\n    dispatch(success({\n      username: \"\",\n      isLoggedIn: false\n    }));\n  };\n};","map":{"version":3,"names":["AuthTypes","axios","AUTH_URL","loginRequest","type","LOGIN_REQUEST","logoutRequest","LOGOUT_REQUEST","success","isLoggedIn","SUCCESS","payload","failure","FAILURE","authenticateUser","email","password","dispatch","loginLink","response","post","localStorage","setItem","data","token","username","name","Promise","resolve","error","reject","logoutUser","removeItem"],"sources":["D:/Documents/manga-reader-app/manga-reader-frontend/src/components/user/auth/authActions.js"],"sourcesContent":["import * as AuthTypes from \"./authTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst  AUTH_URL = \"http://localhost:8070/api/auth\";\r\n\r\nconst loginRequest = () => {\r\n    return {\r\n        type: AuthTypes.LOGIN_REQUEST,\r\n    };\r\n}\r\n\r\nconst logoutRequest = () => {\r\n    return {\r\n        type: AuthTypes.LOGOUT_REQUEST,\r\n    };\r\n}\r\n\r\nconst success = (isLoggedIn) => {\r\n    return {\r\n        type: AuthTypes.SUCCESS,\r\n        payload: isLoggedIn,\r\n    };\r\n}\r\n\r\nconst failure = () => {\r\n    return {\r\n        type: AuthTypes.FAILURE,\r\n        payload: false,\r\n    };\r\n}\r\n\r\nexport const authenticateUser = (email, password) => async (dispatch) => {\r\n    dispatch(loginRequest());\r\n    try {\r\n        loginLink = `${AUTH_URL}/login`\r\n        const response = await axios.post({loginLink}, {\r\n          email: email,\r\n          password: password,\r\n        });\r\n        localStorage.setItem(\"jwtToken\", response.data.token);\r\n        dispatch(success({ username: response.data.name, isLoggedIn: true }));\r\n        return Promise.resolve(response.data);\r\n      } catch (error) {\r\n        dispatch(failure());\r\n        return Promise.reject(error);\r\n      }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return (dispatch) => {\r\n      dispatch(logoutRequest());\r\n      localStorage.removeItem(\"jwtToken\");\r\n      dispatch(success({ username: \"\", isLoggedIn: false }));\r\n    };\r\n  };"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAOC,QAAQ,GAAG,gCAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;EACvB,OAAO;IACHC,IAAI,EAAEJ,SAAS,CAACK;EADb,CAAP;AAGH,CAJD;;AAMA,MAAMC,aAAa,GAAG,MAAM;EACxB,OAAO;IACHF,IAAI,EAAEJ,SAAS,CAACO;EADb,CAAP;AAGH,CAJD;;AAMA,MAAMC,OAAO,GAAIC,UAAD,IAAgB;EAC5B,OAAO;IACHL,IAAI,EAAEJ,SAAS,CAACU,OADb;IAEHC,OAAO,EAAEF;EAFN,CAAP;AAIH,CALD;;AAOA,MAAMG,OAAO,GAAG,MAAM;EAClB,OAAO;IACHR,IAAI,EAAEJ,SAAS,CAACa,OADb;IAEHF,OAAO,EAAE;EAFN,CAAP;AAIH,CALD;;AAOA,OAAO,MAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EACrEA,QAAQ,CAACd,YAAY,EAAb,CAAR;;EACA,IAAI;IACAe,SAAS,GAAI,GAAEhB,QAAS,QAAxB;IACA,MAAMiB,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAW;MAACF;IAAD,CAAX,EAAwB;MAC7CH,KAAK,EAAEA,KADsC;MAE7CC,QAAQ,EAAEA;IAFmC,CAAxB,CAAvB;IAIAK,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,QAAQ,CAACI,IAAT,CAAcC,KAA/C;IACAP,QAAQ,CAACT,OAAO,CAAC;MAAEiB,QAAQ,EAAEN,QAAQ,CAACI,IAAT,CAAcG,IAA1B;MAAgCjB,UAAU,EAAE;IAA5C,CAAD,CAAR,CAAR;IACA,OAAOkB,OAAO,CAACC,OAAR,CAAgBT,QAAQ,CAACI,IAAzB,CAAP;EACD,CATH,CASI,OAAOM,KAAP,EAAc;IACdZ,QAAQ,CAACL,OAAO,EAAR,CAAR;IACA,OAAOe,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;EACD;AACN,CAfM;AAiBP,OAAO,MAAME,UAAU,GAAG,MAAM;EAC5B,OAAQd,QAAD,IAAc;IACnBA,QAAQ,CAACX,aAAa,EAAd,CAAR;IACAe,YAAY,CAACW,UAAb,CAAwB,UAAxB;IACAf,QAAQ,CAACT,OAAO,CAAC;MAAEiB,QAAQ,EAAE,EAAZ;MAAgBhB,UAAU,EAAE;IAA5B,CAAD,CAAR,CAAR;EACD,CAJD;AAKD,CANI"},"metadata":{},"sourceType":"module"}